buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.galaxy'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.springframework.boot:spring-boot-starter-actuator"

	implementation "org.springframework.kafka:spring-kafka"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

//	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
//	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'

	//mapStruct
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

//	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
//	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
	//Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// mariadb
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.9'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "src/main/generated"
def querydslDirBuild = "$buildDir/generated/querydsl"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

clean {
	delete file(querydslDir)
	delete file(querydslDirBuild)

}

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
	options.getGeneratedSourceOutputDirectory().set(file(querydslDirBuild))
}

//querydsl {
//	jpa = true
//	querydslSourcesDir = querydslDir
//}
//
//sourceSets {
//	main.java.srcDir querydslDir
//}
//
//compileQuerydsl {
//	options.annotationProcessorPath = configurations.querydsl
//}

//configurations {
//	querydsl.extendsFrom compileClasspath
//}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//	querydsl.extendsFrom compileClasspath
//}

