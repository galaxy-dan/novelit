spring:
  config:
    import: env.yml
  profiles:
    group:
      1:
        - common
        - development_database
        - port_8003
      production-set1:
        - common
        - production_database
        - port_8001
      production-set2:
        - common
        - production_database
        - port_8002
---

spring:

  config:
    activate:
      on-profile: common

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: kakao
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            #            redirect-uri: ${KAKAO_REDIRECT_URL}
            #            redirect-uri: "{baseUrl}/oauth2/callback/{registrationId}"
            redirect-uri: ${KAKAO_REDIRECT_URL}
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: ${KAKAO_AUTH_URL}
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

jwt:
  header: Authorization
  secret: ${JWT_SECRET_KEY}
  access-token-expire: ${ACCESS_TOKEN_EXPIRE}
  refresh-token-expire: ${REFRESH_TOKEN_EXPIRE}
  share-token-expire: ${SHARE_TOKEN_EXPIRE}
---

spring:
  config:
    activate:
      on-profile: development_database
    import: env.yml
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 10
      max-lifetime: 60000
  data:
    mongodb:
#      host: mongo
#      port: 27017
#      authentication-database: admin
#      username: ${MONGO_DATABASE_USERNAME}
#      password: ${DATABASE_PASSWORD}
#      database: novelit
        uri: mongodb://localhost:27017/novelit

---

spring:
  config:
    activate:
      on-profile: production_database
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    hikari:
      maximum-pool-size: 148
      max-lifetime: 60000
  data:
    mongodb:
      host: mongo
      port: 27017
      authentication-database: admin
      username: ${MONGO_DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      database: novelit

---

spring:
  config:
    activate:
      on-profile: port_8003
    import: env.yml
    kafka:
      topic:
        article: testing
        comment: comment
      bootstrap-servers: localhost:9092
      consumer:
        #        group-id: group-id-test
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.ByteArraySerializer
        value-deserializer: org.apache.kafka.common.serialization.ByteArraySerializer
      producer:
        key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
        value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl # ?? camelCase-> underscore ?? ??.
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
        order_updates: true
        order_inserts: true
        jdbc:
          batch_size: 100
    open-in-view: false


server:
  servlet:
    #    context-path: /api
    encoding:
      charset: UTF-8
      force: true
  port: 8003
  address: 0.0.0.0

---

spring:
  config:
    activate:
      on-profile: port_8001
    import: env.yml
    kafka:
      topic:
        article: testing
        comment: comment
      bootstrap-servers: localhost:9092
      consumer:
        #        group-id: group-id-test
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.ByteArraySerializer
        value-deserializer: org.apache.kafka.common.serialization.ByteArraySerializer
      producer:
        key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
        value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl # ?? camelCase-> underscore ?? ??.
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
        order_updates: true
        order_inserts: true
        jdbc:
          batch_size: 100



server:
  servlet:
    #    context-path: /api
    encoding:
      charset: UTF-8
      force: true
  port: 8001
  address: 0.0.0.0
---

spring:
  config:
    activate:
      on-profile: port_8002
    import: env.yml
    kafka:
      topic:
        article: testing
        comment: comment
      bootstrap-servers: localhost:9092
      consumer:
        #        group-id: group-id-test
        auto-offset-reset: earliest
        key-deserializer: org.apache.kafka.common.serialization.ByteArraySerializer
        value-deserializer: org.apache.kafka.common.serialization.ByteArraySerializer
      producer:
        key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
        value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl # ?? camelCase-> underscore ?? ??.
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MariaDBDialect
        order_updates: true
        order_inserts: true
        jdbc:
          batch_size: 100

server:
  servlet:
    #    context-path: /api
    encoding:
      charset: UTF-8
      force: true
  port: 8002
  address: 0.0.0.0

---

# 토큰 관련 secret Key 및 RedirectUri 설정
#  app:
#    auth:
#      tokenSecret:
#      tokenExpiry:
#      refreshTokenExpiry:
#    oauth2:
#      authorizedRedirectUris:
#        -

